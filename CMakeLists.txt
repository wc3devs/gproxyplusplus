# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

include("cmake/version.cmake")

project(gproxy
	LANGUAGES
		C
		CXX
	VERSION
		${VERSION}
)

if(CMKR_ROOT_PROJECT AND NOT CMKR_DISABLE_VCPKG)
	include(FetchContent)
	message(STATUS "Fetching vcpkg (2022.07.25)...")
	FetchContent_Declare(vcpkg URL "https://github.com/microsoft/vcpkg/archive/refs/tags/2022.07.25.tar.gz")
	FetchContent_GetProperties(vcpkg)
	if(NOT vcpkg_POPULATED)
		FetchContent_Populate(vcpkg)
		include("${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake")
	endif()
endif()

# Packages
find_package(Curses REQUIRED)

find_package(ZLIB REQUIRED)

find_package(BZip2 REQUIRED)

find_package(stormlib REQUIRED)

find_package(bncsutil REQUIRED)

# Target gproxy
set(CMKR_TARGET gproxy)
set(gproxy_SOURCES "")

list(APPEND gproxy_SOURCES
	"src/bncsutilinterface.cpp"
	"src/bnet.cpp"
	"src/bnetprotocol.cpp"
	"src/commandpacket.cpp"
	"src/config.cpp"
	"src/gameprotocol.cpp"
	"src/gproxy.cpp"
	"src/gpsprotocol.cpp"
	"src/socket.cpp"
	"src/util.cpp"
)

list(APPEND gproxy_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${gproxy_SOURCES})
add_executable(gproxy)

if(gproxy_SOURCES)
	target_sources(gproxy PRIVATE ${gproxy_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT gproxy)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${gproxy_SOURCES})

target_compile_definitions(gproxy PRIVATE
	${CURSES_CFLAGS}
)

target_include_directories(gproxy PRIVATE
	${CURSES_INCLUDE_DIRS}
	"$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>"
	"$<INSTALL_INTERFACE:include>"
)

target_link_libraries(gproxy PRIVATE
	"$<BUILD_INTERFACE:bncsutil>"
	${CURSES_LIBRARIES}
	stormlib::stormlib
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

